name: thanosql-ai-chat-dev

services:
  app:
    container_name: thanosql-ai-chat-dev-be
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ../app:/app
    ports:
      - "8826:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s # How often to run the check
      timeout: 5s # Timeout for each attempt
      retries: 3 # Number of attempts before marking as unhealthy
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PYTHONUNBUFFERED: 1

  redis:
    container_name: thanosql-ai-chat-dev-redis
    build:
      context: redis
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: always
    environment:
      OPENAI_MODEL: ${OPENAI_MODEL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL}
      TEXT2SQL_MODEL: ${TEXT2SQL_MODEL}
      TEXT2SQL_API_KEY: ${TEXT2SQL_API_KEY}
      TEXT2SQL_BASE_URL: ${TEXT2SQL_BASE_URL}
      MAX_TEMPERATURE: ${APP_MAX_TEMPERATURE}
      DEFAULT_TEMPERATURE: ${APP_DEFAULT_TEMPERATURE}
      SYSTEM_PROMPT: ${APP_SYSTEM_PROMPT}
    volumes:
      - ./redis/data:/data

  ngrok:
    container_name: thanosql-ai-chat-ngrok
    image: ngrok/ngrok:latest
    profiles: [deploy]
    command:
      - "http"
      - "http://app:8000"
    ports:
      - ${NGROK_HTTP_PORT}:4040
    depends_on:
      app:
        condition: service_healthy
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}

# networks:
#   default:
#     driver: bridge
#     ipam:
#       driver: default
#       config:
#         - subnet: "192.168.20.0/24"
#           gateway: "192.168.20.1"
